name: CI/CD - Application Insights

on:
  push:
    branches:
      - app-insights-native
    paths:
      - 'rest-server/**'
      - '.github/workflows/*.yml'

jobs:
  test:
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ${{ github.workspace }}/rest-server
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: 20
        check-latest: false
        cache: 'maven'
    - name: Run tests
      run: mvn verify
  build_java_docker_image:
    name: Build and publish the JVM-based Docker image
    needs: [ test ]
    runs-on: ubuntu-22.04
    env:
      DOCKER_IMAGE_NAME: 'ghcr.io/jdubois/nubesgen-2/nubesgen-app-insights'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Login to GitHub Packages
        run: docker login -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} ghcr.io
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 20
          check-latest: false
          cache: 'maven'
      - name: Build application with Java
        run: |
          cd rest-server && mvn package  && mkdir -p target/dependency && (cd target/dependency; jar -xf ../*.jar)
      - name: Build the JVM-based Docker image
        uses: docker/build-push-action@v4
        with:
          push: false
          tags: ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
          file: ./rest-server/src/main/docker/Dockerfile.jvm
          context: ./rest-server/
      - name: Push to GitHub Packages
        run: docker push ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
        if: ${{ github.repository == 'jdubois/NubesGen-2' && github.event_name != 'pull_request' }}
  build_native_docker_image:
    name: Build and publish the native (Linux) Docker image
    needs: [ test ]
    runs-on: ubuntu-22.04
    env:
      DOCKER_IMAGE_NAME: 'ghcr.io/jdubois/nubesgen-2/nubesgen-app-insights-native'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Login to GitHub Packages
        run: docker login -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} ghcr.io
      - uses: graalvm/setup-graalvm@v1
        with:
          version: '22.3.1'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cache: 'maven'
      - name: Build application with GraalVM
        run: |
          cd rest-server && mvn -Pnative native:compile
      - name: Build the native (GraalVM) Docker image
        uses: docker/build-push-action@v4
        with:
          push: false
          tags: ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
          file: ./rest-server/src/main/docker/Dockerfile.native
          context: ./rest-server/
      - name: Push to GitHub Packages
        run: docker push ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
        if: ${{ github.repository == 'jdubois/NubesGen-2' && github.event_name != 'pull_request' }}
  deploy:
    needs: [test,build_native_docker_image]
    runs-on: ubuntu-22.04
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Deploy to Container App
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az config set extension.use_dynamic_install=yes_without_prompt
            az containerapp update \
              -n "tmp-nubesgen-app-insights" \
              -g "rg-tmp-nubesgen-app-insisghts-native" \
              --image "ghcr.io/jdubois/nubesgen-2/nubesgen-app-insights-native"
